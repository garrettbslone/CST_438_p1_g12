package com.group12.project1;

import androidx.appcompat.app.AppCompatActivity;

import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Color;
import android.os.Bundle;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.Switch;
import android.widget.TextView;

import com.group12.project1.db.AppDAO;

public class EditAccountActivity extends AppCompatActivity implements AdapterView.OnItemSelectedListener {
    private static final String BASE_MSG = "Edit Account \n";

    // possible languages for the spinner
    private String[] mLangsArr;
    private String mSelectedLang;
    private boolean mFullTime;

    private TextView mNameTv;
    private Spinner mLangSp;
    private EditText mLocEt;
    private Switch mTimeSw;
    private Button mSaveBtn;

    @Override
    protected void onCreate (Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_edit_account);

        mNameTv = findViewById(R.id.EditAccNameTV);
        mLangSp = findViewById(R.id.EditAccLangSP);
        mLocEt = findViewById(R.id.EditAccLocET);
        mTimeSw = findViewById(R.id.EditAccTimeSW);
        mSaveBtn = findViewById(R.id.EditAccSaveBtn);

        mLangsArr = getResources().getStringArray(R.array.langs_arr);

        // get the signed in User object
        SharedPreferences sharedPrefs = getSharedPreferences(User.PREFS_TBL_NAME, Context.MODE_PRIVATE);
        AppDAO dao = Util.getDAO(getApplicationContext());

        User user = User.getSignedInUser(sharedPrefs, dao);

        if (user == null) {
            mNameTv.setText("Error: couldn't get user details");
        } else {
            autofillPrefs(user);

            mTimeSw.setOnCheckedChangeListener((buttonView, isChecked) -> {
                if (isChecked) {
                    mTimeSw.setText(R.string.yes_str);
                } else {
                    mTimeSw.setText(R.string.no_str);
                }

                this.mFullTime = isChecked;
            });

            mSaveBtn.setOnClickListener(v -> {
                String loc = mLocEt.getText().toString().trim();

                if (loc.isEmpty()) {
                    mLocEt.setBackgroundColor(Color.RED);
                    return;
                } else {
                    mLocEt.setBackgroundColor(Color.WHITE);
                }

                user.setPrefs(new SearchPreferences(mSelectedLang, loc, mFullTime));
                dao.update(user);
                startActivity(UserMainMenuActivity.intentFactory(getApplicationContext()));
            });
        }
    }

    /**
     * Auto fills the preferences for the user if they have them.
     * Displays a welcome message with the username.
     * @param user the User who is editing their preferences
     */
    private void autofillPrefs (User user) {
        mNameTv.setText(BASE_MSG + user.getUsername());
        fillSpinner();

        SearchPreferences prefs = user.getPrefs();

        if (prefs != null) {
            for (int i = 0; i < mLangsArr.length; ++i) {
                if (mLangsArr[i].equals(prefs.getLang())) {
                    mLangSp.setSelection(i);
                }
            }

            mLocEt.setText(prefs.getLoc());
            mTimeSw.setChecked(prefs.isFullTime());
        }
    }

    /**
     * Fills the spinner with the programming languages
     * from the string-array "langs_arr" in strings.xml.
     */
    private void fillSpinner() {
        ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(this,
                R.array.langs_arr, android.R.layout.simple_spinner_item);
        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

        mLangSp.setAdapter(adapter);
        mLangSp.setOnItemSelectedListener(this);
    }

    @Override
    public void onItemSelected (AdapterView<?> parent, View view, int position, long id) {
        String item = parent.getItemAtPosition(position).toString();
        mSelectedLang = item;
    }

    @Override
    public void onNothingSelected (AdapterView<?> parent) {
        // Autogenerated stub
    }

    /**
     * Factory pattern provided Intent to switch to this activity.
     * @param ctx the Context to switch from
     * @return    the Intent to switch to this activity
     */
    public static Intent intentFactory(Context ctx) {
        Intent intent = new Intent(ctx, EditAccountActivity.class);
        return intent;
    }
}